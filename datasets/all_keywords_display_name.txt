typename
new
#define
#include
@Override
False
InputStream
None
OutputStream
String
String.
System
True
__init__
__name__
__file__
__str__
abstract
assert
async
await
boolean
bool
break
break;
byte
case
catch
class
.class
companion
console.
const
constructor
continue
continue;
data class
def
default:
dict(
do
document
else if(
elif
else {
else:
enum
equals
except:
explicit
export
extern
final
finally
for (
for
from - import
fun
function
(function
if (
if
init {
inline
inner
instanceof (
int(
interface
lambda
len(
lateinit
let
list(
long
map(
namespace
native
noexcept
object
open class
override
pass
private
private:
protected
public static void main
public
public:
range(
return
self
set(
static
namespace std;
std::
cout
endl
str(
strictfp
struct
super.
suspend
switch
synchronized
template
throw
throws
toString
transient
try
tuple(
type
using
val
var
void
volatile
when
while (
while
window.
with
: Boolean
<Boolean>
: Double
<Double>
: Float
<Float>
: Int
<Int>
: Long
<Long>
: String
<String>
Unit
arrayOf
hashMapOf
listOf
mapOf
mutableListOf
setOf
char);
char
(char)
double);
double
(double)
float);
float
(float)
int);
int
(int)
short);
short
(short)
unsigned
(,void
->
<<
<a>
<b>
<body>
<button>
<canvas>
<del>
<div>
<!doctype html>
<form>
<head>
<html>
<i>
<iframe>
<input>
<link>
<mark>
<meta>
<option>
<p>
<script>
<select>
<span>
<strike>
<strong>
<table>
<tbody>
<thead>
<td>
<title>
<tr>
<u>
>>
this
null
NULL
=>
extends
implements
and
as
in
is
not
or
.addEventListener(
.getElementById(
.querySelector(
.querySelectorAll(
?.
!!.
import
package
[for-list]
{for-dictionary}