#include <iostream>
#include <vector>
#include <string>

int main() {
    std::vector<std::string> text;
    std::string word;
    //std::cout << std::cin.rdstate() << std::endl;
    while (std::cin >> word)
        text.push_back(word);
    std::cout << "Enter a word to search:" << std::endl;
    std::string sought;
    //std::cout << std::cin.rdstate() << std::endl;
    std::cin.ignore(1, std::cin.eof());
    std::cin.clear();
    //std::cout << std::cin.rdstate() << std::endl;

    std::cin >> sought;
    // text must be sorted
    // beg and end will denote the range we're searching
    auto beg = text.begin(), end = text.end();
    auto mid = text.begin() + (end - beg)/2; // original midpoint
    // while there are still elements to look at and we haven't yet found sought
    while (mid != end && *mid != sought) {
        if (sought < *mid) // is the element we want in the first half?
            end = mid; // if so, adjust the range to ignore the second half
        else // the element we want is in the second half
            beg = mid + 1; // start looking with the element just after mid
        mid = beg + (end - beg)/2; // new midpoint, we do not have operator+ for iterators
    }
    if (*mid == sought)
        std::cout << "the result (" << sought << ") was found";
    else
        std::cout << sought << " was not found";
    return 0;
}
